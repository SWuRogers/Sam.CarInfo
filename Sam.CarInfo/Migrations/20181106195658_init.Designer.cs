// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sam.CarInfo.Models;

namespace Sam.CarInfo.Migrations
{
    [DbContext(typeof(SamCarInfoContext))]
    [Migration("20181106195658_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sam.CarInfo.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarModelId");

                    b.Property<string>("Color");

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageBase64");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year");

                    b.HasKey("CarId");

                    b.HasIndex("CarModelId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Sam.CarInfo.Models.CarMake", b =>
                {
                    b.Property<int>("CarMakeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarMakeName");

                    b.HasKey("CarMakeId");

                    b.ToTable("CarMake");

                    b.HasData(
                        new { CarMakeId = 1, CarMakeName = "Ford" },
                        new { CarMakeId = 2, CarMakeName = "Tesla" },
                        new { CarMakeId = 3, CarMakeName = "Honda" }
                    );
                });

            modelBuilder.Entity("Sam.CarInfo.Models.CarModel", b =>
                {
                    b.Property<int>("CarModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarMakeId");

                    b.Property<string>("CarModelName");

                    b.HasKey("CarModelId");

                    b.HasIndex("CarMakeId");

                    b.ToTable("CarModel");

                    b.HasData(
                        new { CarModelId = 1, CarMakeId = 1, CarModelName = "F-150" },
                        new { CarModelId = 2, CarMakeId = 1, CarModelName = "Fusion" },
                        new { CarModelId = 3, CarMakeId = 1, CarModelName = "Escape" },
                        new { CarModelId = 4, CarMakeId = 2, CarModelName = "Model S" },
                        new { CarModelId = 5, CarMakeId = 2, CarModelName = "Model 3" },
                        new { CarModelId = 6, CarMakeId = 3, CarModelName = "C-RV" },
                        new { CarModelId = 7, CarMakeId = 3, CarModelName = "Explorer" },
                        new { CarModelId = 8, CarMakeId = 3, CarModelName = "Accord" }
                    );
                });

            modelBuilder.Entity("Sam.CarInfo.Models.Car", b =>
                {
                    b.HasOne("Sam.CarInfo.Models.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId");
                });

            modelBuilder.Entity("Sam.CarInfo.Models.CarModel", b =>
                {
                    b.HasOne("Sam.CarInfo.Models.CarMake", "CarMake")
                        .WithMany("CarModels")
                        .HasForeignKey("CarMakeId");
                });
#pragma warning restore 612, 618
        }
    }
}
